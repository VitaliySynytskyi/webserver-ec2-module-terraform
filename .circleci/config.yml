version: 2.1
orbs:
  terraform: circleci/terraform@3.1
  aws-cli: circleci/aws-cli@2.0.6
  tfsec: mycodeself/tfsec@1.1.0
  go: circleci/go@1.7.3

jobs:
  tfsec:
    parameters:
    executor: tfsec/default
    steps:
      - checkout
      - tfsec/scan: 
          directory: ./infrastructure
          exclude-checks: 'aws-ec2-enable-at-rest-encryption,aws-ec2-enforce-http-token-imds,aws-ec2-require-vpc-flow-logs-for-all-vpcs,aws-ec2-add-description-to-security-group-rule'

  aws-cli-cred-setup:
    executor: aws-cli/default
    steps:
      - aws-cli/setup:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          aws-region: AWS_REGION

  init-validate-plan:
    executor: terraform/default
    steps:
      - checkout
      - terraform/init:
          path: infrastructure/
      - terraform/validate:
          path: infrastructure/
      - terraform/plan:
          path: infrastructure/
    working_directory: ~/src

  apply:
    executor: terraform/default
    steps:
      - checkout
      - terraform/apply:
          path: infrastructure/
    working_directory: ~/src

  destroy:
    executor: terraform/default
    steps:
      - checkout
      - terraform/destroy:
          path: infrastructure/
    working_directory: ~/src

workflows:
  deploy:
    jobs:
      - tfsec
      - aws-cli-cred-setup:
          context: aws
      - init-validate-plan:
          requires:
            - aws-cli-cred-setup
            # - tfsec
      - hold-before-apply:
          type: approval
          requires:
            - init-validate-plan
      - apply:
          requires:
            - hold-before-apply
      - hold-before-destroy:
          type: approval
          requires:
            - apply
      - destroy:
          requires:
            - hold-before-destroy